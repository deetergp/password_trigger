<?php
/**
 * Implementation of hook_user().
 */
function password_trigger_user($op, &$edit, &$account, $category = NULL) {
  if ($op == 'update' && $category == 'account') {
    if ($edit['pass'] != '') {
      //password is changed, send mail
      $params['account'] = $account;
      $mail = drupal_mail('password_trigger', 'password_change', $account->mail, user_preferred_language($account), $params);
    }
  }
}

/**
 * Implementation of hook_form_alter().
 */
function password_trigger_form_alter(&$form, $form_state, $form_id) {
  if($form_id == 'user_admin_settings') {
    $email_token_help = t('Available variables are:') .' !username, !site, !password, !uri, !uri_brief, !mailto, !date, !login_uri, !edit_uri, !login_url.';
    
    $form['email']['password_changed'] = array(
      '#type' => 'fieldset',
      '#title' => t('Password changed email'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
      '#description' => t('Customize e-mail messages sent to users who change their password.') .' '. $email_token_help,
    );
    $form['email']['password_changed']['password_change_subject'] = array(
      '#type' => 'textfield',
      '#title' => t('Subject'),
      '#default_value' => _password_trigger_mail_text('password_change_subject'),
      '#maxlength' => 180,
    );
    $form['email']['password_changed']['password_change_body'] = array(
      '#type' => 'textarea',
      '#title' => t('Body'),
      '#default_value' => _password_trigger_mail_text('password_change_body'),
      '#rows' => 12,
    );
  }
}

/**
 * Implementation of hook_mail().
 */
function password_trigger_mail($key, &$message, $params) {
  $language = $message['language'];
  $variables = user_mail_tokens($params['account'], $language);
  $message['subject'] .= _password_trigger_mail_text($key .'_subject', $language, $variables);
  $message['body'][] = _password_trigger_mail_text($key .'_body', $language, $variables);
}

/**
 * Returns a mail string for a variable name.
 *
 * Used by user_mail() and the settings forms to retrieve strings.
 */
function _password_trigger_mail_text($key, $language = NULL, $variables = array()) {
  $langcode = isset($language) ? $language->language : NULL;

  if ($admin_setting = variable_get($key, FALSE)) {
    // An admin setting overrides the default string.
    return strtr($admin_setting, $variables);
  }
  else {
    // No override, return default string.
    switch ($key) {
      case 'password_change_subject':
        return t('Password changed for !username at !site', $variables, $langcode);
      case 'password_change_body':
        return t("!username,\n\nThis email is to inform you that you password has been changed at !site.\n\n--  !site team", $variables, $langcode);
    }
  }
}
?>