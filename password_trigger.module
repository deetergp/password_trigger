<?php

/**
 * Implementation of hook_user().
 */
function password_trigger_user($op, &$edit, &$account, $category = NULL) {
  if ($op == 'update' && $category == 'account') {
    if ($edit['pass'] != '') {
      // password is changed, fire trigger
      password_trigger_change();
    }
  }
}

/**
 * Implementation of hook_hook_info().
 */
function password_trigger_hook_info() {
  return array(
    'password_trigger' => array(
      'password_trigger' => array(
        'change' => array(
          'runs when' => t('A password is updated'),
        ),
      ),
    ),
	);
}

/**
 * Implementation of hook_action_info_alter().
 */
function password_trigger_action_info_alter(&$info) {
  if (isset($info['system_message_action']['hooks'])) {
    $info['system_message_action']['hooks']['password_trigger'] = array('change');
  }
  if (isset($info['system_send_email_action']['hooks'])) {
    $info['system_send_email_action']['hooks']['password_trigger'] = array('change');
  }
}

/**
 * Function to generate ping events and invoke hook_trigger_example().
 */
function password_trigger_change() {
  module_invoke_all('password_trigger', 'change');
}

/**
 * Implementation of hook_password_trigger().
 */
function password_trigger_password_trigger($op) {
  if (!module_exists('trigger')) {
    break;
  }

  if ($aids = _trigger_get_hook_aids('password_trigger', $op)) {
    $context = array(
      'hook' => 'password_trigger',
      'op' => $op,
    );

    $dummy = new stdClass();
    foreach ($aids as $aid => $action_info) {
    	actions_do($aid, $dummy, $context);
    }
  }
}
